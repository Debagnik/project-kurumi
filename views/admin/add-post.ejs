<!DOCTYPE html>
<html>
<head>
    <script defer>
        console.log('Script loaded');

        async function generateSummary() {
            console.log('Generate Summary clicked');
            const formData = {
                title: document.getElementById('title').value,
                thumbnailImageURI: document.getElementById('thumbnailImageURI').value,
                markdownbody: document.getElementById('markdownbody').value,
                tags: document.getElementById('tags').value,
                _csrf: document.querySelector('input[name="_csrf"]').value
            };

            console.log('Form data:', formData);

            try {
                const response = await fetch('/admin/generate-post-summary', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': formData._csrf
                    },
                    body: JSON.stringify(formData)
                });

                const data = await response.json();
                console.log('API response:', data);
                
                if (data.code === 200) {
                    document.getElementById('desc').value = data.message;
                } else {
                    alert('Error generating summary: ' + data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error generating summary: ' + error.message);
            }
        }

        // Add event listener as an alternative to onclick
        document.addEventListener('DOMContentLoaded', function() {
            const generateButton = document.querySelector('button[onclick="generateSummary()"]');
            if (generateButton) {
                generateButton.addEventListener('click', generateSummary);
            }
        });
    </script>
    <style>
        .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 10px;
            vertical-align: middle;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .btn-with-spinner {
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
    </style>
</head>
<body>
<a href="/dashboard">&larr; Back</a>
<div class="admin-title">
    <h1>Add New Post</h1>
</div>

<form method="post" autocomplete="off" novalidate>
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <label for="title">Title:</label>
    <input type="text" id="title" name="title" required placeholder="Add Title Here">
    
    <label for="thumbnailImageURI">Thumbnail Image link</label>
    <input type="text" id="thumbnailImageURI" name="thumbnailImageURI" placeholder="Add Thumbnail link" onchange="previewImage(this.value)" pattern="https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)">

    <label for="body">Body (type and format in Markdown):</label>
    <textarea id="markdownbody" name="markdownbody" cols="10" rows="10" required placeholder="Enter Body"></textarea>

    <label for="tags">Tags:</label>
    <input type="text" id="tags" name="tags" placeholder="Add Tags (comma-separated)" required>

    <label for="desc">Short Description:</label>
    <textarea id="desc" name="desc" placeholder="Enter Short Description under 10-50 words" required></textarea>
    
    <% if (siteConfig.isAISummerizerEnabled) { %>
        <button type="button" id="generateSummaryBtn" class="btn btn-with-spinner">
            <span class="button-text">Generate Summary (Beta)</span>
            <span class="spinner"></span>
        </button><p/>
    <% } %>

    <button type="submit" formaction="/admin/add-post" class="btn">Add</button>
    <!--<input type="submit" id="submit" name="submit" value="Add" class="btn">-->

</form>

<script type="text/javascript">
    // Wait for DOM to be ready
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Script loaded');
        
        // Get the generate summary button and its elements
        const generateButton = document.getElementById('generateSummaryBtn');
        const buttonText = generateButton.querySelector('.button-text');
        const spinner = generateButton.querySelector('.spinner');
        
        // Function to set loading state
        function setLoading(isLoading) {
            if (isLoading) {
                generateButton.disabled = true;
                buttonText.textContent = 'Generating...';
                spinner.style.display = 'inline-block';
            } else {
                generateButton.disabled = false;
                buttonText.textContent = 'Generate Summary (Beta)';
                spinner.style.display = 'none';
            }
        }

        // Add click event listener
        if (generateButton) {
            generateButton.addEventListener('click', async function() {
                console.log('Generate Summary clicked');
                
                // Show loading state
                setLoading(true);

                const formData = {
                    title: document.getElementById('title').value,
                    thumbnailImageURI: document.getElementById('thumbnailImageURI').value,
                    markdownbody: document.getElementById('markdownbody').value,
                    tags: document.getElementById('tags').value,
                    _csrf: document.querySelector('input[name="_csrf"]').value
                };

                console.log('Form data:', formData);

                try {
                    const response = await fetch('/admin/generate-post-summary', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'CSRF-Token': formData._csrf
                        },
                        body: JSON.stringify(formData)
                    });

                    const data = await response.json();
                    console.log('API response:', data);
                    
                    if (data.code === 200) {
                        document.getElementById('desc').value = data.message;
                    } else {
                        alert('Error generating summary: ' + data.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error generating summary: ' + error.message);
                } finally {
                    // Hide loading state
                    setLoading(false);
                }
            });
        }
    });
</script>

<link rel="stylesheet" href="/css/style.css">
<script src="/js/script.js"></script>
</body>
</html>